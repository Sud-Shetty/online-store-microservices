---
version: '3.7'
services:
  ## H2Database Docker Compose Config
  h2-order:
    container_name: h2-order
    image: buildo/h2database
    volumes:
      - ./h2-order:/data/h2-data
    expose:
      - "5435"
    ports:
      - "5435:5435"
    restart: always

  h2-product:
    container_name: h2-product
    image: buildo/h2database
    volumes:
      - ./h2-product:/data/h2-data
    expose:
      - "5436"
    ports:
      - "5436:5436"
    restart: always

  h2-inventory:
    container_name: h2-inventory
    image: buildo/h2database
    volumes:
      - ./h2-inventory:/data/h2-data
    expose:
      - "5437"
    ports:
      - "5437:5437"
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  ## Eureka Server
  discovery-server:
    build: discovery-server
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  api-gateway:
    build: api-gateway
    container_name: api-gateway
    ports:
      - "8181:8080"
    expose:
      - "8181"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - discovery-server

  ## Product-Service Docker Compose Config
  product-service:
    container_name: product-service
    build: product-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - h2-product
      - discovery-server
      - api-gateway

  ## Order-Service Docker Compose Config
  order-service:
    container_name: order-service
    build: order-service

    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:orderdb
    depends_on:
      - h2-order
      - broker
      - discovery-server
      - api-gateway

  ## Inventory-Service Docker Compose Config
  inventory-service:
    container_name: inventory-service
    build: inventory-service
    ports:
      - "8686:8686"
    expose:
      - "8686"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:h2:mem:inventorydb
    depends_on:
      - h2-inventory
      - discovery-server
      - api-gateway

  ## Notification-Service Docker Compose Config
  notification-service:
    container_name: notification-service
    build: notification-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - broker
      - discovery-server
      - api-gateway
